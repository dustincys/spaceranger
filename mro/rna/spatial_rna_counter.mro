#
# Copyright (c) 2019 10X Genomics, Inc. All rights reserved.
#
@include "sc_rna_analyzer.mro"
@include "_basic_sc_rna_counter.mro"
@include "_basic_sc_rna_counter_stages.mro"
@include "_sc_rna_counter_stages.mro"
@include "_spatial_reporting_stages.mro"

pipeline SPATIAL_RNA_COUNTER(
    in  string  sample_id,
    in  string  slide_serial_capture_area,
    in  float   barcode_confidence_threshold,
    in  map[]   chunks,
    in  map     chemistry_def,
    in  string  barcode_whitelist,
    in  map[]   library_info,
    in  int     umi_min_qual_threshold,
    in  map     align,
    in  int     align_threads,
    in  path    reference_path,
    in  map[]   primers,
    in  int     recovered_cells,
    in  int     force_cells,
    in  float   subsample_rate,
    in  int     initial_reads,
    in  string  sample_desc,
    in  int     r1_length                      "Trim input R1 to this length (optional)",
    in  int     r2_length                      "Trim input R2 to this length (optional)",
    in  map     annotation_params,
    in  bool    no_secondary_analysis,
    in  bool    filter_umis,
    in  bool    retain_fastqs,
    in  bool    is_pd,
    in  json    barcodes_under_tissue,
    in  float   fraction_under_tissue,
    in  json    alignment_metrics,
    in  jpg     aligned_fiducials,
    in  png     tissue_hires_img,
    in  png     tissue_lowres_img,
    in  jpg     detected_tissue_img,
    in  csv     tissue_positions_list,
    in  json    image_scale_factors,
    out bam     possorted_genome_bam,
    out bam.bai possorted_genome_bam_index,
    out path    spatial,
    out json    metrics_summary_json,
    out csv     metrics_summary_csv,
    out html    web_summary,
    out h5      barcode_summary,
    out h5      molecule_info,
    out h5      raw_gene_bc_matrices_h5,
    out path    raw_gene_bc_matrices_mex,
    out h5      filtered_gene_bc_matrices_h5,
    out path    filtered_gene_bc_matrices_mex,
    out path    analysis,
    out path    analysis_csv,
    out fastq[] read_fastqs,
    out map     align,
    out int[]   gem_groups,
    out csv     filtered_barcodes,
    out csv     barcode_correction_csv,
)
{
    call _BASIC_SC_RNA_COUNTER as _BASIC_SPATIAL_RNA_COUNTER(
        sample_id                    = self.sample_id,
        chemistry_def                = self.chemistry_def,
        barcode_whitelist            = self.barcode_whitelist,
        is_antibody_only             = false,
        barcode_confidence_threshold = self.barcode_confidence_threshold,
        umi_min_qual_threshold       = self.umi_min_qual_threshold,
        align                        = self.align,
        align_threads                = self.align_threads,
        reference_path               = self.reference_path,
        recovered_cells              = self.recovered_cells,
        force_cells                  = self.force_cells,
        cell_barcodes                = self.barcodes_under_tissue,
        correct_barcodes             = true,
        rescue_multimappers          = true,
        skip_metrics                 = false,
        skip_translate               = null,
        annotation_params            = self.annotation_params,
        filter_umis                  = self.filter_umis,
        retain_fastqs                = self.retain_fastqs,
        is_pd                        = self.is_pd,
        chunks                       = self.chunks,
        subsample_rate               = self.subsample_rate,
        initial_reads                = self.initial_reads,
        primers                      = self.primers,
        r1_length                    = self.r1_length,
        r2_length                    = self.r2_length,
        feature_reference            = null,
        library_info                 = self.library_info,
        target_features              = null,
        disable_targeted             = true,
    )

    call SC_RNA_ANALYZER as SPATIAL_RNA_ANALYZER(
        raw_matrices_h5            = _BASIC_SPATIAL_RNA_COUNTER.raw_gene_bc_matrices_h5,
        filtered_matrices_h5       = _BASIC_SPATIAL_RNA_COUNTER.filtered_gene_bc_matrices_h5,
        no_secondary_analysis      = self.no_secondary_analysis,
        aggr_library_info          = null,
        num_analysis_bcs           = null,
        num_pca_bcs                = null,
        num_pca_genes              = null,
        num_principal_comps        = null,
        chemistry_batch_correction = false,
        cbc_knn                    = null,
        cbc_alpha                  = null,
        cbc_sigma                  = null,
        cbc_realign_panorama       = null,
        max_clusters               = null,
        graphclust_neighbors       = null,
        neighbor_a                 = null,
        neighbor_b                 = null,
        tsne_perplexity            = null,
        tsne_input_pcs             = null,
        random_seed                = null,
        tsne_theta                 = null,
        use_genes                  = null,
        exclude_genes              = null,
        use_bcs                    = null,
        tsne_max_dims              = null,
        tsne_max_iter              = null,
        tsne_stop_lying_iter       = null,
        tsne_mom_switch_iter       = null,
        umap_n_neighbors           = null,
        umap_input_pcs             = null,
        umap_max_dims              = null,
        umap_min_dist              = null,
        umap_metric                = null,
        # NOTE: this is null because the cells are already forced in FILTER_BARCODES
        force_cells                = null,
        skip_multigenome_analysis  = true,
    )

    call SPATIAL_REPORTER(
        summaries             = [
            _BASIC_SPATIAL_RNA_COUNTER.summary,
            SPATIAL_RNA_ANALYZER.summary,
            self.alignment_metrics,
        ],
        sample_id             = self.sample_id,
        slide_serial_info     = self.slide_serial_capture_area,
        sample_desc           = self.sample_desc,
        reference_path        = self.reference_path,
        barcode_summary_h5    = _BASIC_SPATIAL_RNA_COUNTER.barcode_summary,
        filtered_barcodes     = _BASIC_SPATIAL_RNA_COUNTER.filtered_barcodes,
        fraction_under_tissue = self.fraction_under_tissue,
        barcode_whitelist     = self.barcode_whitelist,
        matrix                = _BASIC_SPATIAL_RNA_COUNTER.raw_gene_bc_matrices_h5,
        analysis              = SPATIAL_RNA_ANALYZER.analysis,
        gem_groups            = _BASIC_SPATIAL_RNA_COUNTER.gem_groups,
        scalefactors          = self.image_scale_factors,
        tissue_hires_image    = self.tissue_hires_img,
        tissue_lowres_image   = self.tissue_lowres_img,
        aligned_fiducials     = self.aligned_fiducials,
        detected_tissue_image = self.detected_tissue_img,
        tissue_positions_list = self.tissue_positions_list,
    )

    return (
        possorted_genome_bam          = _BASIC_SPATIAL_RNA_COUNTER.possorted_genome_bam,
        possorted_genome_bam_index    = _BASIC_SPATIAL_RNA_COUNTER.possorted_genome_bam_index,
        web_summary                   = SPATIAL_REPORTER.web_summary,
        spatial                       = SPATIAL_REPORTER.spatial,
        metrics_summary_json          = SPATIAL_REPORTER.metrics_summary_json,
        metrics_summary_csv           = SPATIAL_REPORTER.metrics_summary_csv,
        barcode_summary               = _BASIC_SPATIAL_RNA_COUNTER.barcode_summary,
        molecule_info                 = _BASIC_SPATIAL_RNA_COUNTER.molecule_info,
        raw_gene_bc_matrices_h5       = _BASIC_SPATIAL_RNA_COUNTER.raw_gene_bc_matrices_h5,
        raw_gene_bc_matrices_mex      = _BASIC_SPATIAL_RNA_COUNTER.raw_gene_bc_matrices_mex,
        filtered_gene_bc_matrices_h5  = _BASIC_SPATIAL_RNA_COUNTER.filtered_gene_bc_matrices_h5,
        filtered_gene_bc_matrices_mex = _BASIC_SPATIAL_RNA_COUNTER.filtered_gene_bc_matrices_mex,
        analysis                      = SPATIAL_RNA_ANALYZER.analysis,
        analysis_csv                  = SPATIAL_RNA_ANALYZER.analysis_csv,
        read_fastqs                   = _BASIC_SPATIAL_RNA_COUNTER.read1s,
        align                         = _BASIC_SPATIAL_RNA_COUNTER.align,
        gem_groups                    = _BASIC_SPATIAL_RNA_COUNTER.gem_groups,
        filtered_barcodes             = _BASIC_SPATIAL_RNA_COUNTER.filtered_barcodes,
        barcode_correction_csv        = _BASIC_SPATIAL_RNA_COUNTER.barcode_correction_csv,
    )
}
